#Density calculation
library('igraph')
g<-graph.formula(1-2,2-3,3-4,4-5)
>vcount(g)
[1] 5
> ecount(g)
[1] 4
> ecount(g)/(vcount(g)*(vcount(g)-1))
[1] 0.2

#Reciprocity calculation(only for directed graph)
dg <- graph.formula(1-+2, 1-+3, 2++3)
>plot(dg)
> reciprocity(dg)
[1] 0.5

#Formula as per text book
> dyad.census(dg)
$mut
[1] 1
 
$asym
[1] 2
 
$null
[1] 0
 
> 2*dyad.census(dg)$mut/ecount(dg)
[1] 0.5

##for transitivity
Transitivity

> kite <- graph.famous("Krackhardt_Kite")
> atri <- adjacent.triangles(kite)
> plot(kite, vertex.label=atri)
transitivity(kite, type="local")

textbook formula
adjacent.triangles(kite) / (degree(kite) * (degree(kite)-1)/2)


#centrality
Degree of centrality
> centralization.degree(net, mode="in", normalized=T)

Closeness Centralization
> closeness(net, mode="all", weights=NA)
> centralization.closeness(net, mode="all", normalized=T)

Betweeness Centrality
> betweenness(net, directed=T, weights=NA)
> edge.betweenness(net, directed=T, weights=NA)
> centralization.betweenness(net, directed=T, normalized=T)

Eigenvector centrality
> centralization.evcent(net, directed=T, normalized=T)


